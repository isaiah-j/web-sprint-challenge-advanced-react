{"version":3,"sources":["components/PlantList.js","components/ShoppingCart.js","hooks/useForm.js","components/CheckoutForm.js","App.js","index.js"],"names":["PlantList","fetchPlants","a","axios","get","response","plants","data","plantsData","setState","console","log","state","this","searchField","props","searchValue","filteredValue","filteredPlants","filter","plant","name","toLowerCase","includes","className","map","key","id","src","img","alt","scientificName","description","price","light","watering","onClick","addToCart","Component","ShoppingCart","total","cart","reduce","sum","d","removeFromCart","history","push","useForm","initialValues","useState","formValues","setFormValues","e","target","value","initialValue","firstName","lastName","address","city","zip","CheckoutForm","showSuccessMessage","setShowSuccessMessage","values","handleChanges","onSubmit","preventDefault","onChange","data-testid","role","App","setCart","handleChange","p","exact","to","length","type","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6691401c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class PlantList extends Component {\r\n  // add state with a property called \"plants\" - initialize as an empty array\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  fetchPlants = async () => {\r\n    try {\r\n      let response = await axios.get('http://localhost:3333/plants')\r\n      let plants = response.data.plantsData\r\n      this.setState({ plants: plants })\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  // filterPlants = (value) => {\r\n  //   this.setState({\r\n  //     plants: this.state.plants.filter((plant) => {\r\n\r\n  //       return plant.name.includes(value)\r\n\r\n  //     })\r\n  //   })\r\n  // }\r\n  // Fetch plants and inititalize it to state\r\n  componentDidMount() {\r\n    this.fetchPlants()\r\n  }\r\n\r\n\r\n\r\n  // when the component mounts:\r\n  //   - fetch data from the server endpoint - http://localhost:3333/plants\r\n  //   - set the returned plants array to this.state.plants\r\n\r\n  /*********  DON'T CHANGE ANYTHING IN THE RENDER FUNCTION *********/\r\n  render() {\r\n    let searchField = this.props.searchValue?.filteredValue || ''\r\n    const filteredPlants = this?.state?.plants?.filter((plant) => {\r\n      plant = plant.name.toLowerCase()\r\n      return plant.includes(searchField.toLowerCase())\r\n    })\r\n\r\n    return (\r\n      <main className=\"plant-list\">\r\n        {filteredPlants?.map((plant) => (\r\n          <div className=\"plant-card\" key={plant.id}>\r\n            <img className=\"plant-image\" src={plant.img} alt={plant.name} />\r\n            <div className=\"plant-details\">\r\n              <h2 className=\"plant-name\">{plant.name}</h2>\r\n              <p className=\"plant-scientific-name\">{plant.scientificName}</p>\r\n              <p>{plant.description}</p>\r\n              <div className=\"plant-bottom-row\">\r\n                <p>${plant.price}</p>\r\n                <p>‚òÄÔ∏è {plant.light}</p>\r\n                <p>üí¶ {plant.watering}x/month</p>\r\n              </div>\r\n              <button\r\n                className=\"plant-button\"\r\n                onClick={() => this.props.addToCart(plant)}\r\n              >\r\n                Add to cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n/********* DO NOT DO ANYTHING IN THIS COMPONENT *********/\r\n\r\nexport default function ShoppingCart(props) {\r\n  const total = props.cart.reduce((sum, d) => sum + d.price, 0);\r\n  return (\r\n    <div className=\"cart\">\r\n      {props.cart.map((plant) => (\r\n        <div className=\"plant-card\" key={plant.id}>\r\n          <img className=\"plant-image\" src={plant.img} alt={plant.name} />\r\n          <div className=\"plant-details\">\r\n            <h2 className=\"plant-name\">{plant.name}</h2>\r\n            <p>${plant.price}</p>\r\n            <button\r\n              className=\"plant-button\"\r\n              onClick={() => props.removeFromCart(plant)}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"checkout-section\">\r\n        <p className=\"total\">Total: ${total}</p>\r\n        <button\r\n          className=\"checkout\"\r\n          onClick={() => props.history.push(\"/checkout\")}\r\n        >\r\n          Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// write your custom hook here to control your checkout form\r\nimport { useState } from 'react'\r\n\r\nexport const useForm = (initialValues) => {\r\n    const [formValues, setFormValues] = useState(initialValues)\r\n\r\n    const handleChange = (e) => {\r\n        setFormValues({ ...formValues, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    return [formValues, handleChange]\r\n}","import React, { useState } from \"react\";\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nconst initialValue = {\r\n  firstName: \"John \",\r\n  lastName: \"Doe\",\r\n  address: \"1337 Ave\",\r\n  city: \"erie\",\r\n  state: \"pennsylvania\",\r\n  zip: \"30000\",\r\n};\r\n\r\n// This form should be handled by a \"useForm\" custom hook\r\n// Build out the logic needed for a form custom hook (see the useForm.js file)\r\n// and replace the necessary stateful logic from CheckoutForm with the hook\r\n\r\nconst CheckoutForm = (props) => {\r\n\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [values, handleChanges] = useForm(initialValue);\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowSuccessMessage(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Checkout Form</h2>\r\n        <label>\r\n          First Name:\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName}\r\n            onChange={handleChanges}\r\n          />\r\n        </label>\r\n        <label>\r\n          Last Name:\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName}\r\n            onChange={handleChanges}\r\n          />\r\n        </label>\r\n        <label>\r\n          Address:\r\n          <input\r\n            name=\"address\"\r\n            value={values.address}\r\n            onChange={handleChanges}\r\n          />\r\n        </label>\r\n        <label>\r\n          City:\r\n          <input name=\"city\" value={values.city} onChange={handleChanges} />\r\n        </label>\r\n        <label>\r\n          State:\r\n          <input name=\"state\" value={values.state} onChange={handleChanges} />\r\n        </label>\r\n        <label>\r\n          Zip:\r\n          <input name=\"zip\" value={values.zip} onChange={handleChanges} />\r\n        </label>\r\n        <button name=\"checkout\">Checkout</button>\r\n      </form>\r\n\r\n      {showSuccessMessage && (\r\n        <div className=\"success-message\" data-testid=\"successMessage\">\r\n          <p>\r\n            You have ordered some plants! Woo-hoo! <span role=\"img\">üéâ</span>\r\n          </p>\r\n          <p>Your new green friends will be shipped to:</p>\r\n          <br />\r\n          <br />\r\n          <p>\r\n            {values.firstName} {values.lastName}\r\n          </p>\r\n          <p>{values.address}</p>\r\n          <p>\r\n            {values.city}, {values.state} {values.zip}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\r\n\r\nimport PlantList from \"./components/PlantList\";\r\nimport ShoppingCart from \"./components/ShoppingCart\";\r\nimport CheckoutForm from \"./components/CheckoutForm\";\r\nimport { useForm } from './hooks/useForm'\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  // array of plants that have been added to the cart\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const [searchValue, handleChange] = useForm()\r\n\r\n  // add a plant to the cart\r\n  const addToCart = (plant) => {\r\n    setCart([...cart, plant]);\r\n  };\r\n\r\n  // remove a plant from the cart\r\n  const removeFromCart = (plant) => {\r\n    setCart(cart.filter((p) => p.id !== plant.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <nav className=\"container\">\r\n          <h1>\r\n            React Plants <span role=\"img\">üåø</span>\r\n          </h1>\r\n          <ul className=\"steps\">\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Plants\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/cart\">\r\n                Cart\r\n                <span className=\"cart-badge\">\r\n                  {cart.length > 0 && cart.length}\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <input type=\"text\" name=\"filteredValue\" onChange={handleChange}></input>\r\n        </nav>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <PlantList addToCart={addToCart} searchValue={searchValue} />}\r\n        />\r\n        <Route\r\n          path=\"/cart\"\r\n          render={(props) => (\r\n            <ShoppingCart\r\n              {...props}\r\n              cart={cart}\r\n              removeFromCart={removeFromCart}\r\n            />\r\n          )}\r\n        />\r\n        <Route path=\"/checkout\" component={CheckoutForm} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}